<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>본선통합배차 자동프로그램</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/shorthandcss@1.1.1/dist/shorthand.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:200,300,400,500,600,700,800,900&display=swap" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.css" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jua&display=swap" rel="stylesheet">
    <style>
        /* 스타일 설정 */
        body {
            font-family: 'Muli', sans-serif;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: linear-gradient(135deg, #ffffff 70%, #8f71d8 100%);
        }

        .container {
            width: 350px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        .section {
            padding: 20px;
            border-bottom: 1px solid #ddd;
        }

        .section:last-child {
            border-bottom: none;
        }

        .title {
            font-size: 1.5em;
            margin-bottom: 18px;
            font-weight: bold;
            text-align: center;
        }

        .row {
            display: flex;
            justify-content: space-between;
            margin: 5px 0;
        }

        .cell {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            text-align: center;
            background-color: #f9f9f9;
        }

        .cell.header {
            font-weight: bold;
            background-color: #f0f0f0;
        }

        .btn {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 10px 0 10px;
            border: none;
            border-radius: 5px;
            background-color: #87e795;
            color: white;
            cursor: pointer;
            text-align: center;
            font-size: 20px;
            font-family: 'Jua', sans-serif;
        }

        .btn:hover {
            background-color: #0056b3;
        }

        .btn2 {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 10px 0 10px;
            border: none;
            border-radius: 5px;
            background-color: #ee7b89;
            color: white;
            cursor: pointer;
            text-align: center;
            font-size: 20px;
            font-family: 'Jua', sans-serif;
        }

        .btn2:hover {
            background-color: #d72727;
        }

        .title-highlight {
            background: linear-gradient(135deg, #ffcc80, #ffb74d);
            color: white;
            padding: 5px 10px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: inline-block;
        }

        .blinking-text {
            animation: blinking 2s infinite;
            animation-timing-function: ease-in-out;
        }

        @keyframes blinking {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0;
            }
        }

        h2 {
            font-size: 1.3em;
            margin-bottom: 15px;
            font-weight: bold;
            text-align: center;
        }

        .center-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 50px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- 현재 배차 -->
        <div class="section" id="current">
            <div class="center-container">
                <h2 class="title-highlight">본선통합배차</h2>
            </div>
            <div class="title blinking-text">현재 배차</div>
            <div class="row">
                <div class="cell header">구간</div>
            </div>
            <div class="row">
                <div class="cell"><%= currentData.SANG_HA %></div>
            </div>
            <div class="row">
                <div class="cell header">컨테이너</div>
                <div class="cell header">규격</div>
            </div>
            <div class="row">
                <div class="cell" id="CON_NO"><%= currentData.CON_NO %></div>
                <div class="cell"><%= currentData.CON_KU %></div>
            </div>
            <div class="row">
                <div class="cell header">중량</div>
                <div class="cell header">하불</div>
            </div>
            <div class="row">
                <div class="cell"><%= currentData.CON_KG %></div>
                <div class="cell"><%= currentData.B_KUM_IN %></div>
            </div>
            <div class="row">
                <div class="cell header">온도</div>
                <div class="cell header">위험물코드</div>
            </div>
            <div class="row">
                <div class="cell"><%= currentData.CON_TEMP %></div>
                <div class="cell"><%= currentData.CON_CLASS %></div>
            </div>
            <div class="row">
                <button class="btn2" id="endDriving2">운행종료</button>
                <button class="btn">전송요청</button>
            </div>
            <div class="row">
                <button class="btn2" id="loadingComplete">상차완료</button>
                <button class="btn" id="unloadingComplete" style="display: none;">하차완료</button>
            </div>
        </div>
    

        <!-- 다음 배차 -->
        <div class="section" id="nextDispatchSection" style="display: none;">
            <div class="title blinking-text">다음 배차</div>
            <div class="row">
                <div class="cell header">구간</div>
            </div>
            <div class="row">
                <div class="cell" id="SANG_HA2"></div>
            </div>
            <div class="row">
                <div class="cell header">컨테이너</div>
                <div class="cell header">규격</div>
            </div>
            <div class="row">
                <div class="cell" id="CON_NO2"></div>
                <div class="cell" id="CON_KU2"></div>
            </div>
            <div class="row">
                <button class="btn">전송요청</button>
            </div>
            <div class="row">
                <button class="btn2" id="endDriving">운행종료</button>
                <button class="btn" id="startNextBatch">다음배차시작</button>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script>

document.addEventListener('DOMContentLoaded', function() {
    console.log("JavaScript 코드가 로드되었습니다.");

    let unloadingCompleted = false;
    let endDrivingClickable = false;
    let currentTotal;
    let sasiValue;

    function fetchCurrentTotal() {
        fetch('/get-current-data')
        .then(response => response.json())
        .then(data => {
            if (data && data.assignedTotal !== undefined && data.currentData && data.currentData.SASI !== undefined) {
                currentTotal = data.assignedTotal;
                sasiValue = data.currentData.SASI; // SASI 값 저장
                console.log(`현재 TOTAL 값: ${currentTotal}`);
                console.log(`현재 SASI 값: ${sasiValue}`);
            } else {
                console.error('No assignedTotal or SASI found in data:', data);
                alert('TOTAL 또는 SASI 값이 설정되지 않았습니다.');
            }
        })
        .catch(error => {
            console.error('데이터 가져오기 중 오류:', error);
            alert('TOTAL 또는 SASI 값이 설정되지 않았습니다.');
        });
    }

    // TOTAL 값을 설정하기 위해 페이지 로드 시 호출
    fetchCurrentTotal();

    document.getElementById('loadingComplete').addEventListener('click', function() {
        if (!currentTotal || !sasiValue) {
            console.error('currentTotal 또는 SASI 값이 설정되지 않았습니다.');
            alert('TOTAL 또는 SASI 값이 설정되지 않았습니다.');
            return;
        }

        fetch('/calculate-next-dispatch', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ currentTotal, SASI: sasiValue })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // 서버로부터 받은 다음 배차 데이터를 UI에 반영
                document.getElementById('SANG_HA2').innerText = data.nextDispatch.SANG_HA;
                document.getElementById('CON_NO2').innerText = data.nextDispatch.CON_NO;
                document.getElementById('CON_KU2').innerText = data.nextDispatch.CON_KU;
                document.getElementById('nextDispatchSection').style.display = 'block';

                // 현재 배차 관련 버튼들을 숨기고 하차완료 버튼을 표시
                document.getElementById('endDriving2').style.display = 'none';
                document.getElementById('loadingComplete').style.display = 'none';
                document.getElementById('unloadingComplete').style.display = 'block';
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('다음 배차 계산 중 오류 발생:', error);
        });
    });

    document.getElementById('unloadingComplete').addEventListener('click', function() {
        console.log("하차완료 버튼 클릭됨.");
        unloadingCompleted = true;
        endDrivingClickable = true;
        console.log("운행종료 버튼 클릭 가능 상태로 변경됨.");
    });

    document.getElementById('endDriving2').addEventListener('click', function() {
        console.log("운행종료 버튼 클릭됨.");
        const CON_NO = document.getElementById('CON_NO').innerText.trim();
        if (!CON_NO) {
            console.error('CON_NO 값이 설정되지 않았습니다.');
            alert('CON_NO 값이 설정되지 않았습니다.');
            return;
        }

        fetch('/end-driving', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ CON_NO })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/LOGIN';
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('운행 종료 중 오류 발생:', error);
        });
    });


    document.getElementById('endDriving').addEventListener('click', function() {
        console.log("운행종료 버튼 클릭됨.");
        const CON_NO = document.getElementById('CON_NO2').innerText.trim();
        if (!CON_NO) {
            console.error('CON_NO 값이 설정되지 않았습니다.');
            alert('CON_NO 값이 설정되지 않았습니다.');
            return;
        }

        fetch('/end-driving', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ CON_NO })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/LOGIN';
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('운행 종료 중 오류 발생:', error);
        });
    });


        document.getElementById('startNextBatch').addEventListener('click', function() {
        console.log("다음 배차 시작 버튼 클릭됨.");

        const nextData = {
            SANG_HA: document.getElementById('SANG_HA2').innerText.trim(),
            CON_NO: document.getElementById('CON_NO2').innerText.trim(),
            CON_KU: document.getElementById('CON_KU2').innerText.trim()
        };

        fetch('/start-next-batch', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(nextData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('다음 배차가 성공적으로 설정되었습니다.');
                // /driver4 페이지로 이동
                window.location.href = '/driver4';
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('다음 배차 설정 중 오류 발생:', error);
        });
    });
});

    let sessionTimeout;

    function resetSessionTimeout() {
        clearTimeout(sessionTimeout);
        sessionTimeout = setTimeout(() => {
            alert('오랜 시간 활동이 없어 로그아웃됩니다.');
            window.location.href = '/'; // 로그아웃 URL로 변경
        }, 5 * 60 * 60 * 1000); // 5시간 타임아웃 설정
    }

    // 페이지 로드 시와 사용자 활동 시 타이머 리셋
    window.onload = resetSessionTimeout;
    document.onmousemove = resetSessionTimeout;
    document.onkeypress = resetSessionTimeout;

    // 폼 데이터가 변경될 때 세션 스토리지에 저장
    document.querySelectorAll('input, textarea, select').forEach(element => {
        element.addEventListener('input', () => {
            sessionStorage.setItem(element.id, element.value);
        });
    });

    // 페이지 로드 시 세션 스토리지에서 폼 데이터 복원
    window.onload = () => {
        document.querySelectorAll('input, textarea, select').forEach(element => {
            if (sessionStorage.getItem(element.id)) {
                element.value = sessionStorage.getItem(element.id);
            }
        });
    };

</script>
</body>
</html>
